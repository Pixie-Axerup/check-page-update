on:
  [push]
  #schedule:
# - cron:  '1 8 * * *'

name: Check for changes

env:
  github_username: "open-telemetry"
  github_repo: "opentelemetry-specification"
  SEGMENT_DOWNLOAD_TIMEOUT_MIN: "1800"

jobs:
  collect:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.parse_version.outputs.version }}
      #published_at: ${{ steps.parse_data.outputs.published_at }}
      #draft: ${{ steps.parse_data.outputs.draft }}
      #prerelease: ${{ steps.parse_data.outputs.prerelease }}
    steps:

      # Use cURL to fetch the given URL, saving the response to `data.json`
      # Use `jq` to pull one or more fields from the JSON to include in the issue
      - name: Parse version
        id: parse_version
        run: |
          echo "::set-output name=version::$(curl -s https://api.github.com/repos/open-telemetry/opentelemetry-specification/releases/latest | jq . | sed 's/\"//g')"

      #    echo "::set-output name=published_at::$(jq -r '.published_at' data.json)"
      #    echo "::set-output name=draft::$(jq -r '.draft' data.json)"
      #    echo "::set-output name=prerelease::$(jq -r '.prerelease' data.json)"
      #    echo "::set-output name=target_commitish::$(jq -r '.target_commitish' data.json)"

      # Compare the response to the previous run, using a hash of the response as the cache key
  compare:
    runs-on: ubuntu-latest
    needs: collect
    steps:
      #- name: Fetch Cache
      #  id: cache
      #  uses: actions/cache@v2
      #  with:
      #    path: ${{ steps.parse_version.outputs.version }}
      #    key: ${{ hashFiles('version') }}

      # If there was not a cache hit (meaning the response changed), print it, and create an issue.
      - name: Get today's date
        id: date
        run: |
          echo "::set-output name=today::$(date "+%Y/%m/%d")"

      - name: Notify if page has changed and create issue
        #if: steps.cache.outputs.cache-hit != 'true' && steps.parse_data.outputs.draft == 'False' && steps.parse_data.outputs.prerelease == 'False' && steps.parse_data.outputs.target_commitish == 'main'
        uses: actions-ecosystem/action-create-issue@v1
        with:
          github_token: ${{ github.token }}
          title: OpenTelemetry Specifications updated on ${{ steps.date.outputs.today }}
          body: |
            ## OpenTelemetry Specifications was updated

                New version is ${{ steps.parse_version.outputs.version }}
                Check out https://github.com/open-telemetry/opentelemetry-specification/blob/main/CHANGELOG.md

